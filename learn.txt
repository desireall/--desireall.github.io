--------2017.2.3 ~~ 2017.2.7
OTA
  开源项目 php-tot
  
  itms-services 协议     <a href="itms-services://?action=download-manifest&url=https://desireall.github.io/ota/manifest.plist">
  文件
  .plist   # ios7.1 之后必须部署在https服务器上   其中的 url指向  ipa的所在位置(可使用http服务器)
  .ipa

使用 云盘php-tot_online + https站点 部署OTA 

部署apache 配置对php的支持

   windos 环境 apache的命令   

httpd -k install 
将Apache注册为windows服务，可以指定的服务名为"apache"。
 
httpd -k install -n "服务名"　
将Apache注册为windows服务，自己指定一个服务名字。
 
httpd -k install -n "服务名" -f "conf\my.conf"
将Apache注册为windows服务，自己指定一个服务名字，并且使用特定配置文件。
 
httpd.exe -k uninstall -n "MyServiceName"
移除Apache服务，自己制定一个服务名字。

httpd.exe -k start -n "MyServiceName"
启动Apache服务。
 
httpd.exe -k stop -n "MyServiceName" 或httpd.exe -k shutdown -n "MyServiceName"
停止Apache服务。
 
httpd.exe -k restart -n "MyServiceName"
重启Apache服务。



https 
  自签CA 证书  (使用openssl OR Java中的keytool生成)
    生成.csr ---> .crt   .cer 文件

--------2017.2.9 ~~ 2017.2.28

springmvc的文件上传功能  (用来存储上传的.ipa文件)       
    
    项目spring-mvc-showcase     

      ！！eclilpse中导入maven的web项目   需要wtp插件  或者   执行 mvn eclipse:eclipse –Dwtpversion=1.0
 
      使用插件 AspectJ  一个面向切面的框架，它扩展了Java语言。
           AspectJ定义了AOP语法，所以它有一个专门的编译器用来生成遵守Java字节编码规范的Class文件。
    
          https://www.oschina.net/question/2376096_238593
                 Spring AOP需要将切面用Ioc容器来管理，但是aspectj不用，你只需要用他自己的编译器即可。

        Eclipse 中的 AJDT插件
             http://www.eclipse.org/ajdt/downloads/#44zips

         maven构建项目时，出现aspectj-maven-plugin 无法构建的问题    解决办法： 给eclipse安装AspectJ(AJDT)插件

      springmvc文件上传配置

       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- 支持的其中一个属性，支持的最大文件大小，以字节为单位 -->
         <property name="maxUploadSize" value="100000"/>
       </bean>
     
     多路解析器正常工作，你需要在classpath路径下准备必须的jar包。如果使用的是通用的多路上传解析器CommonsMultipartResolver，你所需要的jar包是commons-fileupload.jar

     上传文件超出设置大小会抛出
           org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size of 100 bytes exceeded;
     ！！TODO 了解springmvc 异常处理 返回 的几种方式
         

     servlet的多路传输转换功能(需要了解一下)


     使用 springmvc 完成 类php-tot工具

           java 解析 ipa文件
           https://my.oschina.net/heweipo/blog/382942

           springmvc文件上传 保存
           http://blog.csdn.net/swingpyzf/article/details/20230865
           
           SpringMVC加载配置Properties文件的几种方式
           http://www.yyjava.com/blog/articles/177.html

           jsp中的basePath和path (绝对路径 相对路径)
           http://rainbow702.iteye.com/blog/1553200

        1. 文件上传 下载 (文件上传  静态资源访问)
        TODO  2. .ipa  .apk 文件的解析保存 (文件解压缩)
        TODO  3. 界面优化
        4. 使用配置参数(properties)

    ！！TODO 了解 springmvc 中配置的 mvc:annotation-driven 和 task:annotation-driven 的区别
         
         所有的自定义命名空间（像mvc，context等）下的标签解析都是由BeanDefinitionParser接口的子类来完成
         
         <beans:property> 与  <property> 的区别

         web项目的路径问题
         
未完

--------2017.3.7 ~~ 2017.3.20

java 集合
https://github.com/pzxwhc/MineKnowContainer/issues/75

ArrayList 不是线程安全的。那么 Vector 就可以看作是 ArrayList 的一个线程安全版本。由于也是实现了 List 接口，所以也是 可以插入空值，可以插入重复的值。 它和 HashTable 一样，是属于一种同步容器，而不是一种并发容器。（参考《Java并发编程实战》，类似CopyOnWriteArrayList，ConcurrentHashMap这种就属于并发容器）


集合操作优化
https://www.ibm.com/developerworks/cn/java/j-lo-set-operation/index.html


ConcurrentHashMap

https://www.ibm.com/developerworks/cn/java/java-lo-concurrenthashmap/


多线程
并行 并发 同步 异步
https://gist.github.com/yhben/5202572

http://www.cnblogs.com/tracylining/p/3506673.html



----------------------第三方登录-------------------------
   TODO  httpclient-4.5.1.jar  中 对https 协议的支持
         httpasyncclient-4.1.1.jar

 Java的异步HttpClient   http://www.cnblogs.com/guogangj/p/5462594.html

使用httpclient通过post发送json https://www.iteblog.com/archives/1379.html



--------2017.2.9 ~~ 2017.2.

了解 oAuth2.0
    
    项目 spring-rest-oauth2-sample
     
    TODO 
    了解原理
    对接一个oAuth2.0系统
    部署一个
    
     
了解 RESTful API

       支持RESTful的框架 springmvc   jersey    springboot
      
             springboot实战  http://blog.csdn.net/liaokailin/article/category/5765237

    开源项目springboot-restful 
    
    使用 Java 配置进行 Spring bean 管理  @Configuration  @bean
           https://www.ibm.com/developerworks/cn/webservices/ws-springjava/


http2.0



--------2017.3.20 ~~ 2017.3.20
 mina 

 1. 解析 处理 http 消息








protobuf


protobuf-Java-format





Spring、SpringMVC、Mybatis、servlet、Javascript、Jquery、Ajax、Webservice 

MVC设计模式

Tomcat、Apache，Nginx等应用和服务器配置

shell脚本  mysql，Mongodb，sql优化；

memcached， redis， rabbitMQ， dubbo/dubbox ，webservice等















-------------------------------------------------------------------------------

服务器结构   线程模型

服务器配置

GM

客户端热更新    php  lua



apache benchmark  ?
用apache benchmark来做的基于HTTP协议上的Helloworld的测试



Lucida Console

了解maven
       配置
   D:\apache-maven-3.1.0\conf\settings.xml 
      <localRepository>F:\maven\repository</localRepository>      // 配置本地仓储位置
      
      // 配置 中央仓储 镜像    <mirrorOf> central</mirrorOf>    不使用默认的下载路径,加快下载速度
     <mirror>      
      <id> maven-net-cn</id>
      <name> Maven China Mirror</name>      
      <url> http://central.maven.org/maven2/</url>        
      <mirrorOf> central</mirrorOf>      
    </mirror>


    通过配置文件添加 下载源码  doc文件
<profiles>
<profile>
    <id>downloadSources</id>
    <properties>
        <downloadSources>true</downloadSources>
        <downloadJavadocs>true</downloadJavadocs>           
    </properties>
</profile>
</profiles>
<activeProfiles>
  <activeProfile>downloadSources</activeProfile>
</activeProfiles>


       命令   
         mvn dependency:sources //下载项目依赖包以及源码
         mvn dependency:resolve -Dclassifier=javadoc  // 下载项目的依赖包以及doc.jar文件

         mvn package // 项目打包


Eclipse 中使用 Maven的问题    
    在用eclipse导入web项目时 如果eclipse安装了wtp插件在会自动将其转化为eclipse认得到的web项目，在项目上面点击右键run as 的run on server可以用，但是当eclipse没有安装wtp插件时run on server则不用，此时的解决方式为用命令行切换到项目的根目录然后执行 
          mvn eclipse:eclipse –Dwtpversion=1.0即可解决。

maven已有项目的导入问题  http://linlin.blog.techweb.com.cn/archives/34.html

使用maven 创建新的项目  http://everlook.iteye.com/blog/1446672
     创建web项目
     mvn archetype:generate -DgroupId=pers.yuhuo.java-tot -DartifactId=java-tot -DarchetypeArtifactId=maven-archetype-webapp 




日志组件 logback
  配置文件默认路径 src 下   使用  java -cp .:${JAVA_LOG}   进行配置
   配置文件查找顺序logback.groovy ---->logback-test.xml----> logback.xml
    如果配置文件都不存在, 那么 logback 默认地会调用BasicConfigurator

！！了解自定义(包  级别) 日志输入
http://blog.csdn.net/phantomes/article/details/44779529
http://webinglin.github.io/2015/06/04/Logback-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/

    <!-- 禁掉mina内部的debug级别输出 -->
  <logger name="org.apache.mina" level="INFO">
    <appender-ref ref="stdout" />
    <appender-ref ref="file—all" />
    <appender-ref ref="file—above-info" />
  </logger>


常用的配置方式




excel <--> xml



linux 上 apache 服务器

查看 版本号
 cd /etc/rc.d/init.d/
 httpd -v

网页默认目录是/var/www/html下。修改方法：
打开/etc/httpd/conf/httpd.conf文件，找到下面这行
DocumentRoot "/var/www/html"
可以改成你想要的目录。
-----------------------------------------------------------
apache的默认重要配置信息如下：
配置文件：/etc/httpd/conf/http.conf
服务器的根目录：/var/www/html
访问日志文件：/var/log/httpd/access_log
错误日志文件：/var/log/httpd/error_log
运行apache的用户：apache
运行apache的组：apache端口：80模块存放路径：/usr/lib/httpd/modules

http服务位置   /etc/rc.d/init.d/
启动apache /etc/rc.d/init.d/httpd start


apache benchmark  网站压力测试


OTA
  开源项目 php-tot
  
  itms-services 协议
  文件
  .plist   # ios7.1 之后必须部署在https服务器上   其中的 url指向  ipa的所在位置(可使用http服务器)
  .ipa
  
https 
  自签CA 证书  (使用openssl OR Java中的keytool生成)
    生成.csr ---> .crt   .cer 文件


mysql
  存储过程
     
     
     

MongoDB



Redis
 基础
 

 redis 集群部署
 


Ruby
 基础
  
  
 删除所有的gem 
  1.windows 
     ruby -e "`gem list`.split(/$/).each { |line| puts `gem uninstall -Iax #{line.split(' ')[0]}` unless line.empty? }"
  2.linux 
     gem list --no-version | xargs gem uninstall -aIx


rails 
  改代码之后 自动加载的路径      ActiveSupport::Dependencies.autoload_paths
F:/rubyWorkspace/simple_cms/app/assets
F:/rubyWorkspace/simple_cms/app/channels
F:/rubyWorkspace/simple_cms/app/controllers
F:/rubyWorkspace/simple_cms/app/controllers/concerns
F:/rubyWorkspace/simple_cms/app/helpers
F:/rubyWorkspace/simple_cms/app/jobs
F:/rubyWorkspace/simple_cms/app/mailers
F:/rubyWorkspace/simple_cms/app/models
F:/rubyWorkspace/simple_cms/app/models/concerns
F:/rubyWorkspace/simple_cms/test/mailers/previews



github 
  git常用命令   教程 http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000
        

     解决冲突    ！！！
        http://blog.csdn.net/u012150179/article/details/14047183

     git add命令详解   
         http://hubingforever.blog.163.com/blog/static/171040579201231110371044/


     1.提交操作
     git add .
     git rm filename
     git commit -m ""
     git push origin master
     

     
     2.更新
     git pull origin master


     3. 状态查看(经常使用)
     git status 

     git diff  

     git log   查看历史记录
     git log  --pretty=oneline   查看历史记录的简洁信息
     git log --graph   可以看到分支合并图。

     git log --graph --pretty=oneline --abbrev-commit   查看分支合并的历史记录 

     git reflog查看命令历史

     
     4.版本回退
     git reset --hard [commit id]   回退指定版本
     git reset --hard HEAD^  会退到当前版本的上一个版本

     


     5.撤销修改
     git reset HEAD file可以把暂存区的修改撤销掉(unstage)


     git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

      一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

      一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

      总之，就是让这个文件回到最近一次git commit或git add时的状态。

     6.分支
     
     git checkout -b [branchname] 创建分支并切换到新的分支 (git checkout命令加上-b参数表示创建并切换，相当于以下两条命令  
                                                            git branch dev 创建       git checkout dev  切换)
     
     git merge [branchname]  合并的分支(使用 Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息)

     git merge --no-ff -m "xxx" [branchname]  合并的分支(加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并)

     git branch -d [branchname]  删除分支

     git log --graph --pretty=oneline --abbrev-commit   查看分支合并的历史记录 



     git checkout -b branch-name origin/branch-name 在本地创建和远程分支对应的分支，使用，本地和远程分支的名称最好一致；

     git branch --set-upstream branch-name origin/branch-name  建立本地分支和远程分支的关联


     7.bug 分支   
        http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000

     git stash 封存工作区修改(工作区就没改变了)

     git stash list命令看看  刚才的工作现场存到哪去了？

     git stash apply [name]申请恢复封存的工作现场(默认是最新的工作现场)

     git stash drop [name]删除封存的工作现场(默认是最新的工作现场)

     git stash pop 恢复并删除工作现场(只能是最新的工作现场)

     8.tag

     








jetty
 
 https://www.ibm.com/developerworks/cn/web/wa-lo-jetty/


guava
        --- 缓存使用 guava-18.0.jar   
    TODO 了解    http://ifeve.com/google-guava/
        https://github.com/tdziurko/Guava-Lessons
 

netty
  基于netty的websocket






mysql 
  存储过程
  sysdate() - INTERVAL 10 MINUTE    // 当前时间 - 10 分钟


  类型
  decimal  




steve pavlina
http://www.stevepavlinachina.com/archives.html

